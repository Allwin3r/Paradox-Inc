{
	"info": {
		"_postman_id": "558f639c-f8c0-49b6-9f1e-baba26a9bd9b",
		"name": "Paradox",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31554959"
	},
	"item": [
		{
			"name": "registrationCheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.expect(pm.response.code).to.eql(400);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Response content type is text/html\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.equal(\"text/html\");",
							"});",
							"",
							"",
							"pm.test(\"Response should contain a valid error message schema\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('error').that.is.a('string').and.to.have.lengthOf.at.least(1, \"Error message should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response body must not be empty\", function () {",
							"    const responseBody = pm.response.text();",
							"    pm.expect(responseBody).to.not.be.empty;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"test@example.com\",\n  \"rawPassword\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"register"
					]
				}
			},
			"response": [
				{
					"name": "register",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"test@example.com\",\n  \"rawPassword\": \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"register"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Thu, 05 Jun 2025 15:48:28 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"email\": \"test@example.com\",\n    \"rawPassword\": \"$2a$10$GrEBvjoDAsw3faqKm4ewzOIJ4F5dnVSZO1yfWSD0TMDP1/J/DNRS6\"\n}"
				}
			]
		},
		{
			"name": "LoginCheck",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"test@example.com\",\n  \"rawPassword\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "RefreshCheck",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwiaWF0IjoxNzQ5MTQwMjA2LCJleHAiOjE3NDk3NDUwMDZ9.WaD_yrmYiDNMjjgjrGVOOjJzaFNJasBFESb-K7jvwZw\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/refresh",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"refresh"
					]
				}
			},
			"response": []
		},
		{
			"name": "taskCreateCheck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 403\", function () {",
							"    pm.expect(pm.response.code).to.eql(403);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Response content type is XML\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('text/xml');",
							"});",
							"",
							"",
							"pm.test(\"Response body is not null\", function () {",
							"    const responseBody = pm.response.text();",
							"    ",
							"    pm.expect(responseBody).to.not.be.null;",
							"});",
							"",
							"",
							"pm.test(\"Response has valid error schema\", function () {",
							"    const responseData = xml2Json(pm.response.text());",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.keys('error', 'message');",
							"    pm.expect(responseData.error).to.exist;",
							"    pm.expect(responseData.message).to.exist;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": " Bearer {{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Test Task\",\n  \"description\": \"This is a test task\",\n  \"status\": \"TODO\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReadTaskCheck",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwiaWF0IjoxNzQ5MjEwNTA5LCJleHAiOjE3NDkyMTE0MDl9.jVVBeNTeSlaZX653P8XPa0cyOZZgT5sZLwklMCnIicU",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/tasks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateTaskCheck",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwiaWF0IjoxNzQ5MjExMDEzLCJleHAiOjE3NDkyMTE5MTN9.61yVIikA_zaQEQ0y2d3FPqsk3JjLyZOJRoG2l8jmJ8g",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"Updated Title\",\n  \"description\": \"Updated Description\",\n  \"status\": \"DONE\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/tasks/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteTaskCheck",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiZW1haWwiOiJ0ZXN0QGV4YW1wbGUuY29tIiwiaWF0IjoxNzQ5MjExMDEzLCJleHAiOjE3NDkyMTE5MTN9.61yVIikA_zaQEQ0y2d3FPqsk3JjLyZOJRoG2l8jmJ8g",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:8080/tasks/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"tasks",
						"3"
					]
				}
			},
			"response": []
		}
	]
}